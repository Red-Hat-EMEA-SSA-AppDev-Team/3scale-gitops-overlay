
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: books-api
    version: v2
    app.kubernetes.io/part-of: library-books-api
    app.kubernetes.io/name: books-api-v2
  name: books-api-v2
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: books-api
    version: v2
    app.kubernetes.io/part-of: library-books-api
    app.kubernetes.io/name: books-api-v2
  name: books-api-v2-view
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: view
subjects:
  - kind: ServiceAccount
    name: books-api-v2
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: books-api
    version: v2
    app.kubernetes.io/part-of: library-books-api
    app.kubernetes.io/name: books-api-v2
  name: books-api-v2-config
data:
  quarkus.otel.exporter.otlp.traces.endpoint: http://jaeger-es-collector.observability.svc:4317
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: books-api-v2
  labels:
    app: books-api
    version: v2
    app.kubernetes.io/part-of: library-books-api
    app.kubernetes.io/name: books-api-v2
    app.openshift.io/runtime: quarkus
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
spec:
  replicas: 1
  selector:
    matchLabels:
      app: books-api
      version: v2
      app.kubernetes.io/part-of: library-books-api
      app.kubernetes.io/name: books-api-v2      
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
      labels:
        app: books-api
        version: v2
        app.openshift.io/runtime: quarkus
        app.kubernetes.io/part-of: library-books-api
        app.kubernetes.io/name: books-api-v2
    spec:
      containers:
        - name: books-api-v2
          image: quay.io/jnyilimbibi/demo-books-api:v2
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          ports:
            - name: jolokia
              containerPort: 8778
              protocol: TCP
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 30m
              memory: 512Mi
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
      serviceAccountName: books-api-v2
---
apiVersion: v1
kind: Service
metadata:
  name: books-api-v2
  labels:
    app: books-api
    version: v2
    app.kubernetes.io/part-of: library-books-api
    app.kubernetes.io/name: books-api-v2
    discovery.3scale.net: "true"
  annotations:
    discovery.3scale.net/port: "80"
    discovery.3scale.net/scheme: "http"
    discovery.3scale.net/path: "/api/v2"
    discovery.3scale.net/description-path: "/openapi.json"
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: jolokia
      protocol: TCP
      port: 8778
      targetPort: 8778
  selector:
    app: books-api
    version: v2
    app.kubernetes.io/name: books-api-v2
    app.kubernetes.io/part-of: library-books-api
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: books-api
    version: v2
    app.kubernetes.io/part-of: library-books-api
    app.kubernetes.io/name: books-api-v2
  name: books-api-v2
spec:
  selector:
    matchLabels:
      app: books-api
      version: v2
      app.kubernetes.io/part-of: library-books-api
      app.kubernetes.io/name: books-api-v2
  endpoints:
    - scheme: http
      targetPort: 8080
      path: /q/metrics
      interval: 10s
      honorLabels: true
# ---
# apiVersion: route.openshift.io/v1
# kind: Route
# metadata:
#   name: books-api-v2
#   labels:
#     app: books-api
#     version: v2
#     app.kubernetes.io/part-of: library-books-api
#     app.kubernetes.io/name: books-api-v2
# spec:
#   port:
#     targetPort: http
#   tls:
#     termination: edge
#   to:
#     kind: Service
#     name: books-api-v2